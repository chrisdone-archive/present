* TODO Test out printing Data.ByteString
Prelude> import qualified Data.ByteString.Char8 as S8
Prelude S8> :pre S8.pack "yo"

<interactive>:5:36:
    Unsupported type: () (TupleT 0)

    If you think this message was unhelpful, or that
    there is a bug in the present library, please
    file a bug report here:

    https://github.com/chrisdone/present/issues/new

    Your feedback will be very helpful to make this
    tool as easy to use as possible.

    In the splice: $Present.presentIt

express ty =
  help ["Unsupported type: " ++
        pprint ty ++ " (" ++ show ty ++ ")"]

* TODO Add built-in printers for specific types like Text, ByteString, Map, etc.
* TODO Write test suite
* TODO Cleanup
* TODO Make lazy interface (IDs and such)
* TODO Refactor the first-pass/second-pass gubbins
* TODO Better support for infix types
* TODO Support type equalities
* TODO Consider supporting ambiguous vars
  CLOSED: [2016-03-08 Tue 20:36]
  - State "DONE"       from "TODO"       [2016-03-08 Tue 20:36]
E.g. `Proxy :: Proxy a` or `Left 'a' :: Either Char a`. In other
words, if it's unambiguous (none of the data slots depend on a type
variable), might as well print it. GHCi supports this by defaulting,
we can support it by just ignoring unused type variables.
* DONE Remove state-monad depdency
  CLOSED: [2016-03-07 Mon 10:53]
  - State "DONE"       from "TODO"       [2016-03-07 Mon 10:53]
* DONE Investigate a :present cmd in GHCi
  CLOSED: [2016-02-27 Sat 21:07]
  - Note taken on [2016-02-27 Sat 21:07] \\
    Works!
  - State "DONE"       from "TODO"       [2016-02-27 Sat 21:07]
I think it would be a perfect solution to whether to produce e.g. a
plain-text or terminal presentation.
* DONE Support extension via classes
  CLOSED: [2016-02-24 Wed 23:15]
  - State "DONE"       from "TODO"       [2016-02-24 Wed 23:15]
* DONE Need to add type-signatures to retain let generalization
  CLOSED: [2016-02-24 Wed 22:35]
  - State "DONE"       from "TODO"       [2016-02-24 Wed 22:35]
* DONE Primitive types (Char, Int, etc.)
  CLOSED: [2016-03-01 Tue 15:23]
  - State "DONE"       from "TODO"       [2016-03-01 Tue 15:23]
  CLOCK: [2016-03-01 Tue 15:07]--[2016-03-01 Tue 15:23] =>  0:16
* DONE Support including type in the presentation
  CLOSED: [2016-03-08 Tue 17:19]
  - State "DONE"       from "TODO"       [2016-03-08 Tue 17:19]
  CLOCK: [2016-03-08 Tue 15:54]--[2016-03-08 Tue 16:28] =>  0:34
* DONE Tuples
  CLOSED: [2016-03-08 Tue 17:40]
  - State "DONE"       from "TODO"       [2016-03-08 Tue 17:40]
  CLOCK: [2016-03-01 Tue 15:23]--[2016-03-01 Tue 16:02] =>  0:39
* DONE Newtypes
  CLOSED: [2016-03-08 Tue 18:33]
  - State "DONE"       from "TODO"       [2016-03-08 Tue 18:33]
* DONE Records
  CLOSED: [2016-03-08 Tue 19:28]
  - State "DONE"       from "TODO"       [2016-03-08 Tue 19:28]
  CLOCK: [2016-03-08 Tue 19:19]--[2016-03-08 Tue 19:28] =>  0:09
* DONE Lists
  CLOSED: [2016-03-08 Tue 19:36]
  - State "DONE"       from "TODO"       [2016-03-08 Tue 19:36]
  CLOCK: [2016-03-08 Tue 19:28]--[2016-03-08 Tue 19:36] =>  0:08
* DONE Type-aliases
  CLOSED: [2016-03-08 Tue 20:06]
  - State "DONE"       from "TODO"       [2016-03-08 Tue 20:06]
  CLOCK: [2016-03-08 Tue 19:37]--[2016-03-08 Tue 20:06] =>  0:29
* DONE Consider defaulting common classes like Num, IsString, etc.
  CLOSED: [2016-03-08 Tue 20:28]
  - State "DONE"       from "TODO"       [2016-03-08 Tue 20:28]
* DONE Improve support type aliases (support 'String')
  CLOSED: [2016-03-08 Tue 21:43]
  - State "DONE"       from "TODO"       [2016-03-08 Tue 21:43]
* DONE Fix class-based extension classes
  CLOSED: [2016-03-08 Tue 22:02]
  - State "DONE"       from "TODO"       [2016-03-08 Tue 22:02]
* DONE Support printing [Char] as "foo" instead of ['f','o','o']
  CLOSED: [2016-03-08 Tue 22:09]
  - State "DONE"       from "TODO"       [2016-03-08 Tue 22:09]
  CLOCK: [2016-03-08 Tue 22:03]--[2016-03-08 Tue 22:09] =>  0:06
