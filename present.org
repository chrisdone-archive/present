* TODO Write test suite
* TODO Newtypes, records
* TODO Lists, tuples
* TODO Type-aliases
* TODO Primitive types (Char, Int, etc.)
* TODO Cleanup
* TODO Remove state-monad depdency
* DONE Need to add type-signatures to retain let generalization
  CLOSED: [2016-02-24 Wed 22:35]
  - State "DONE"       from "TODO"       [2016-02-24 Wed 22:35]
* TODO Refactor the first-pass/second-pass gubbins
* TODO Consider defaulting common classes like Num, IsString, etc.
* TODO Consider supporting ambiguous vars
E.g. `Proxy :: Proxy a` or `Left 'a' :: Either Char a`. In other
words, if it's unambiguous (none of the data slots depend on a type
variable), might as well print it. GHCi supports this by defaulting,
we can support it by just ignoring unused type variables.
